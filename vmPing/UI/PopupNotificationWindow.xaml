<Window x:Class="vmPing.UI.PopupNotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:resource="clr-namespace:vmPing.Properties"
        UseLayoutRounding="True"
        Height="95"
        MinWidth="500"
        SizeToContent="Width"
        ResizeMode="NoResize"
        WindowStyle="None"
        ShowInTaskbar="False"
        Background="#282829"
        BorderBrush="#636363"
        BorderThickness="1"
        Topmost="True"
        ShowActivated="False"
        MouseLeftButtonUp="Window_MouseLeftButtonUp"
        SizeChanged="Window_SizeChanged"
        RenderTransformOrigin="1,1"
        AllowsTransparency="True">
    <Window.RenderTransform>
        <ScaleTransform x:Name="scaleTransform" ScaleX="1" ScaleY="1"/>
    </Window.RenderTransform>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetProperty="Opacity" From="0" To="0.99" />
                    <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleX" From="0" To="1" />
                    <DoubleAnimation Duration="00:00:00.2" Storyboard.TargetName="scaleTransform" Storyboard.TargetProperty="ScaleY" From="0" To="1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Buttons -->
        <Grid HorizontalAlignment="Right">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Button: Maximize / Dedicated Window -->
            <Button Grid.Column="0"
                    Padding="6"
                    Margin="0,1,3,0"
                    Background="Transparent"
                    HorizontalAlignment="Right"
                    IsTabStop="False"
                    ToolTip="Open status history window"
                    ToolTipService.InitialShowDelay="1500"
                    ToolTipService.ShowDuration="2000"
                    Click="Maximize_Click">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Name="controlButton_border"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                CornerRadius="4"
                                Opacity="0.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}">
                            <Image Name="controlButton_image"
                                   Source="{StaticResource icon.window-restore-white}"
                                   Width="12"
                                   Height="12"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="controlButton_border" Property="Background" Value="#000" />
                                <Setter TargetName="controlButton_border" Property="Opacity" Value="1" />
                                <Setter TargetName="controlButton_image" Property="Source" Value="{StaticResource icon.window-restore-white}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="controlButton_border" Property="BorderBrush" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Button: Close -->
            <Button Grid.Column="1"
                    Padding="6"
                    Margin="0,1,3,0"
                    Background="Transparent"
                    HorizontalAlignment="Right"
                    IsTabStop="False"
                    ToolTip="Close"
                    ToolTipService.InitialShowDelay="1500"
                    ToolTipService.ShowDuration="2000"
                    Click="Close_Click">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border Name="controlButton_border"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                CornerRadius="4"
                                Opacity="0.5"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}">
                            <Image Name="controlButton_image"
                                   Source="{StaticResource icon.window-close-white}"
                                   Width="12"
                                   Height="12"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="controlButton_border" Property="Background" Value="#000" />
                                <Setter TargetName="controlButton_border" Property="Opacity" Value="1" />
                                <Setter TargetName="controlButton_image" Property="Source" Value="{StaticResource icon.window-close-white}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="controlButton_border" Property="BorderBrush" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility" Value="Hidden" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsMouseOver}" Value="True">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>

        <!-- Status change log -->
        <ListBox Name="StatusHistoryList"
                 Grid.Row="1"
                 Background="Transparent"
                 SelectionMode="Single"
                 BorderThickness="0"
                 IsTabStop="False"
                 MaxWidth="1200"
                 FocusVisualStyle="{x:Null}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 VerticalAlignment="Top"
                 MouseLeftButtonUp="Window_MouseLeftButtonUp">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.Resources>
                <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ScrollBarStyle.Dark}">
                    <Setter Property="Opacity" Value="0.7"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsMouseOver}" Value="True">
                            <Setter Property="Opacity" Value="1.0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                        <!-- Status glyph -->
                        <TextBlock DockPanel.Dock="Left"
                                   Name="StatusIndicator"
                                   Text="{Binding StatusAsGlyph}"
                                   FontSize="18"
                                   FontFamily="Marlett"
                                   VerticalAlignment="Center"
                                   Padding="5,0,0,0">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StatusAsString}" Value="{x:Static resource:Strings.StatusChange_Down}">
                                            <Setter Property="Foreground" Value="#dc322f" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusAsString}" Value="{x:Static resource:Strings.StatusChange_Error}">
                                            <Setter Property="Foreground" Value="#dc322f" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusAsString}" Value="{x:Static resource:Strings.StatusChange_Up}">
                                            <Setter Property="Foreground" Value="#859900" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusAsString}" Value="{x:Static resource:Strings.StatusChange_LatencyHigh}">
                                            <Setter Property="Foreground" Value="#ecce51" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding StatusAsString}" Value="{x:Static resource:Strings.StatusChange_LatencyNormal}">
                                            <Setter Property="Foreground" Value="#61b8ff" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <!-- Timestamp -->
                        <TextBlock DockPanel.Dock="Left"
                                   Text="{Binding Timestamp, StringFormat='[{0}]'}"
                                   FontSize="15"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Opacity="0.6"
                                   Padding="6,0,0,0" />
                        <!-- Hostname (or alias) -->
                        <TextBlock DockPanel.Dock="Left"
                                   Text="{Binding AliasIfExistOrHostname}"
                                   FontSize="17"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Padding="9,0,0,0" />
                        <!-- Arrow symbol -->
                        <TextBlock DockPanel.Dock="Left"
                                   Text="🠖"
                                   FontSize="17"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Opacity="0.6"
                                   Padding="5,0" />
                        <!-- Status -->
                        <TextBlock DockPanel.Dock="Left"
                                   Text="{Binding StatusAsString}"
                                   FontSize="17"
                                   VerticalAlignment="Center"
                                   Foreground="{Binding ElementName=StatusIndicator, Path=Foreground}"/>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <!-- Logo -->
        <StackPanel Grid.Row="3"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
            <Image Source="{StaticResource icon.vmping-logo-simple}"
                   Width="16"
                   Height="16" />
            <TextBlock Grid.Row="3"
                       Text="vmPing"
                       FontSize="13"
                       Foreground="White"
                       Opacity="0.5"
                       Margin="7,0,5,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Center"/>
        </StackPanel>
    </Grid>
</Window>
